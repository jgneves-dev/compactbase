@use "./variables" as *;
@use "sass:color";

// ðŸ”¹ Responsive Mixin (Mobile-first)
@mixin respond($breakpoint) {
  @if $breakpoint == mobile or $breakpoint == sm {
    @media (max-width: 600px) { @content; }
  } @else if $breakpoint == tablet or $breakpoint == md {
    @media (max-width: 900px) { @content; }
  } @else if $breakpoint == desktop or $breakpoint == lg {
    @media (max-width: 1200px) { @content; }
  } @else if $breakpoint == xs {
    @media (max-width: 320px) { @content; }
  }
}

// ðŸ”¹ Flexbox Centering
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// ðŸ”¹ Grid Layout Helper
@mixin grid-layout($columns, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// ðŸ”¹ Smooth Fade-in Animation
@mixin fade-in($duration: 0.6s, $delay: 0s) {
  opacity: 0;
  transform: translateY(20px);
  animation: fadeIn $duration ease-out $delay forwards;

  @keyframes fadeIn {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

// ðŸ”¹ Button Mixin (Custom Colors)
@mixin button($bg-color, $text-color) {
  background: $bg-color;
  color: $text-color;
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;

  &:hover {
    background: color.adjust($bg-color, $lightness: -10%);
    transform: translateY(-3px);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  &:active {
    transform: translateY(1px);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
}